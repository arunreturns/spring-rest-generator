package app.__VARIABLE_NAME__.controller;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import app.__VARIABLE_NAME__.api.I__CLASS_NAME__Service;
import app.__VARIABLE_NAME__.dto.__CLASS_NAME__;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@CrossOrigin
@RestController
@Api(value="API for Handling __CLASS_NAME__ services")
public class __CLASS_NAME__Controller {
	private Logger logger = LoggerFactory.getLogger(this.getClass());
	private I__CLASS_NAME__Service __VARIABLE_NAME__Service;

	@Autowired
	public __CLASS_NAME__Controller(I__CLASS_NAME__Service __VARIABLE_NAME__Service) {
		this.__VARIABLE_NAME__Service = __VARIABLE_NAME__Service;
	}

	@RequestMapping(path="/__VARIABLE_NAME__s", method = RequestMethod.GET)
	@ApiOperation(value = "View all the __VARIABLE_NAME__s", response = List.class)
	public List<__CLASS_NAME__> get__CLASS_NAME__() {
		logger.info("Inside get__CLASS_NAME__");
		return __VARIABLE_NAME__Service.get__CLASS_NAME__Service();
	}
	@RequestMapping(path="/__VARIABLE_NAME__", method = RequestMethod.POST)
	@ApiOperation(value = "Add a __VARIABLE_NAME__", response = Boolean.class)
	public boolean add__CLASS_NAME__(@RequestBody __CLASS_NAME__ __VARIABLE_NAME__) {
		logger.info("Inside add__CLASS_NAME__");
		return __VARIABLE_NAME__Service.add__CLASS_NAME__Service(__VARIABLE_NAME__);
	}

	@RequestMapping(path="/__VARIABLE_NAME__/{__VARIABLE_NAME__Id}", method = RequestMethod.GET)
	@ApiOperation(value = "View the details of a specific __VARIABLE_NAME__", response = __CLASS_NAME__.class)
	public __CLASS_NAME__ get__CLASS_NAME__Details(@PathVariable Integer __VARIABLE_NAME__Id) {
		logger.info("Inside get__CLASS_NAME__Details");
		return __VARIABLE_NAME__Service.get__CLASS_NAME__DetailsService(__VARIABLE_NAME__Id);
	}

	@RequestMapping(path="/__VARIABLE_NAME__/{__VARIABLE_NAME__Id}", method = RequestMethod.PUT)
	@ApiOperation(value = "Update a single __VARIABLE_NAME__ details", response = Boolean.class)
	public boolean update__CLASS_NAME__(@PathVariable Integer __VARIABLE_NAME__Id, @RequestBody __CLASS_NAME__ __VARIABLE_NAME__) {
		logger.info("Inside update__CLASS_NAME__");
		return __VARIABLE_NAME__Service.update__CLASS_NAME__ByIDService(__VARIABLE_NAME__Id, __VARIABLE_NAME__);
	}
	
	@RequestMapping(path="/__VARIABLE_NAME__/{__VARIABLE_NAME__Id}", method = RequestMethod.DELETE)
	@ApiOperation(value = "Delete the __VARIABLE_NAME__ based on ID", response = Boolean.class)
	public boolean delete__CLASS_NAME__ByID(@PathVariable Integer __VARIABLE_NAME__Id) {
		logger.info("Inside delete__CLASS_NAME__ByID");
		return __VARIABLE_NAME__Service.delete__CLASS_NAME__ByIDService(__VARIABLE_NAME__Id);
	}
}
